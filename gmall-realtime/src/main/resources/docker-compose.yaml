version: '3'
networks:
  zookeeper-networks:
    driver: bridge
  kafka-networks:
    driver: bridge
  clickhouse-networks:
    driver: bridge
#  mongodb-networks:
#    driver: bridge
#  hbase_phoneix-networks:
#    driver: bridge
#  kafka-map-networks:
#    driver: bridge

services:
  zookeeper1:
    image: wurstmeister/zookeeper
    container_name: zookeeper1
    restart: always
    ports:
      - "9001:2181"
    volumes:
      - "/Users/damon/projects/docker/zookeeper/zookeeper1/data:/data"
      - "/Users/damon/projects/docker/zookeeper/zookeeper1/datalog:/datalog"
      - "/Users/damon/projects/docker/zookeeper/zookeeper1/logs:/logs"
      - "/Users/damon/projects/docker/zookeeper/zookeeper1/conf:/conf"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888
    networks:
      - zookeeper-networks

  zookeeper2:
    image: wurstmeister/zookeeper
    container_name: zookeeper2
    restart: always
    ports:
      - "9002:2181"
    volumes:
      - "/Users/damon/projects/docker/zookeeper/zookeeper2/data:/data"
      - "/Users/damon/projects/docker/zookeeper/zookeeper2/datalog:/datalog"
      - "/Users/damon/projects/docker/zookeeper/zookeeper2/logs:/logs"
      - "/Users/damon/projects/docker/zookeeper/zookeeper2/conf:/conf"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888
    networks:
      - zookeeper-networks

  kafka1:
    image: wurstmeister/kafka
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.35
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.35:9092
      KAFKA_ZOOKEEPER_CONNECT: "192.168.0.35:9001,192.168.0.35:9002"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-networks
  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.35
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.35:9093
      KAFKA_ZOOKEEPER_CONNECT: "192.168.0.35:9001,192.168.0.35:9002"
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-networks
  kafka3:
    image: wurstmeister/kafka
    container_name: kafka3
    ports:
      - "9094:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.35
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.35:9094
      KAFKA_ZOOKEEPER_CONNECT: "192.168.0.35:9001,192.168.0.35:9002"
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-networks

  kafka-map:
    image: dushixiang/kafka-map
    container_name: kafka-map
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - "/Users/damon/projects/docker/kafka-map/data:/usr/local/kafka-map/data"
    environment:
      - DEFAULT_USERNAME=admin
      - DEFAULT_PASSWORD=admin
    networks:
      - kafka-networks
  
  clickhouse:
    image: yandex/clickhouse-server
    container_name: clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9004:9004"
    volumes:
      - "/Users/damon/projects/docker/clickhouse/db:/var/lib/clickhouse"
#      - "/Users/damon/projects/docker/clickhouse/config.xml:/etc/clickhouse-server/config.xml"
#      - "/Users/damon/projects/docker/clickhouse/users.xml:/etc/clickhouse-server/users.xml"
#      - "/Users/damon/projects/docker/clickhouse/data:/var/lib/clickhouse"
#      - "/Users/damon/projects/docker/clickhouse/log/clickhouse-server.log:/var/log/clickhouse-server/clickhouse-server.log"
#      - "/Users/damon/projects/docker/clickhouse/log/clickhouse-server.err.log:/var/log/clickhouse-server/clickhouse-server.err.log"
    networks:
      - clickhouse-networks



#  mongodb:
#    image: mongo
#    container_name: mongodb
#    ports:
#      - "27017:27017"
#    volumes:
#      - "/Users/damon/database:/data/db"
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=admin
#      - MONGO_INITDB_ROOT_PASSWORD=admin
#    networks:
#      - mongodb-networks
#
#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    restart: always
#    ports:
#      - "8082:8081"
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
#      - ME_CONFIG_MONGODB_SERVER=mongodb
#    networks:
#      - mongodb-networks
#
#  hbase-phoneix:
#    image: iteblog/hbase-phoenix-docker:1.0
#    container_name: hbase-phoenix
#    restart: always
#    ports:
#      - "8765:8765"
##      - "8888:8888"
##    environment:
##      - PHOENIX_QUERYSERVER_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8888"
#    networks:
#      - hbase_phoneix-networks

volumes:
  shared-tmpfs:
    driver: local
    driver_opts:
      type: "tmpfs"
      device: "tmpfs"

